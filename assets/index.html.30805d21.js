import{_ as t,r as o,o as i,c as h,a as e,b as a,d as n,e as s}from"./app.d7937426.js";const l={},d=e("h1",{id:"saas-场景下的应用独立部署",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#saas-场景下的应用独立部署","aria-hidden":"true"},"#"),a(" SaaS 场景下的应用独立部署")],-1),c=e("h2",{id:"开始之前",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开始之前","aria-hidden":"true"},"#"),a(" 开始之前")],-1),_=e("p",null,"你可能需要了解：",-1),p={href:"https://zh.wikipedia.org/zh-cn/%E8%BD%AF%E4%BB%B6%E5%8D%B3%E6%9C%8D%E5%8A%A1",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.redhat.com/zh/topics/cloud-computing/what-is-multitenancy",target:"_blank",rel:"noopener noreferrer"},u={href:"https://zh.wikipedia.org/zh-cn/Kubernetes",target:"_blank",rel:"noopener noreferrer"},k={href:"https://zh.wikipedia.org/zh-cn/Docker",target:"_blank",rel:"noopener noreferrer"},x={href:"https://docs.docker.com/get-started/",target:"_blank",rel:"noopener noreferrer"},b=e("li",null,"什么是 Nginx 以及 Nginx 的基本用法",-1),g=s('<h2 id="业务背景" tabindex="-1"><a class="header-anchor" href="#业务背景" aria-hidden="true">#</a> 业务背景</h2><p>在当前快速发展的数字化时代，企业对灵活性、效率和创新的需求不断增加。传统的软件开发和部署模式已经无法满足客户的多样化需求。许多企业倾向于使用云计算提供商的服务，以便更轻松地扩展和管理他们的应用程序。然而，许多企业在使用现有的云服务时，仍然面临着一些限制，尤其是在自定义性和灵活性方面。因此，我们致力于开发一种创新的 SaaS 产品，使租户能够根据自己的需求自定义和发布应用，从而实现真正的个性化和独立性。</p><h2 id="业务场景" tabindex="-1"><a class="header-anchor" href="#业务场景" aria-hidden="true">#</a> 业务场景</h2><ol><li><p>自定义应用创建： 租户可以使用我们的平台轻松创建他们自己的应用程序，无论是基于预定义模板还是从头开始。他们可以选择所需的功能、界面设计和数据模型，以确保应用程序与其业务需求完全匹配。</p></li><li><p>独立发布： 一旦应用程序创建和定制完成，租户可以选择将其独立发布到他们所选择的云提供商的计算环境中。这意味着他们可以选择适合其需求的云服务，无论是公共云、私有云还是混合云。</p></li></ol><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><p>根据以上对业务场景的分析，从前端开发人员的角度，我们需要做到：</p><ol><li>制作一套或多套预定义的代码模板，这套代码在部署后，只要能够取到租户的自定义配置，就能呈现出对应的功能、界面和数据模型</li><li>无论租户选择使用哪个云提供商提供的计算环境，应用都要能够部署</li><li>由于前端后端分离的开发模式，需要获取应用对应的后端服务地址，配置到反向代理，方便获取租户的自定义配置</li></ol><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语" aria-hidden="true">#</a> 结语</h2>',8);function m(B,E){const r=o("ExternalLinkIcon");return i(),h("div",null,[d,c,_,e("ul",null,[e("li",null,[a("什么是软件交付模式 "),e("a",p,[a("SaaS"),n(r)])]),e("li",null,[e("a",f,[a("什么是多租户架构"),n(r)])]),e("li",null,[a("什么是 "),e("a",u,[a("Kubernetes（k8s）"),n(r)]),a("，什么是 "),e("a",k,[a("Docker"),n(r)]),a(" 以及 "),e("a",x,[a("Docker 的基础概念"),n(r)])]),b]),g])}const z=t(l,[["render",m],["__file","index.html.vue"]]);export{z as default};
